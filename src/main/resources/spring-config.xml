<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

    <context:annotation-config/>

    <!--引入配置文件,配置文件中使用-->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="fileEncoding" value="UTF-8"/>
        <property name="locations">
            <list>
                <value>classpath:db.properties</value>
                <value>classpath:config.properties</value>
            </list>
        </property>
    </bean>
    <!--程序中使用,服务配置-->
    <bean id="config" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="fileEncoding" value="UTF-8"/>
        <property name="locations">
            <list>
                <value>classpath:config.properties</value>
            </list>
        </property>
    </bean>


    <!-- 爬虫类配置 -->


    <bean id="plantomjsWebDriver" class="com.uv.driver.MyPhantomJSWebDriver" scope="prototype">
        <property name="driverExecutorPath" value="${driver.plantomjs.executor.path}"/>
    </bean>

    <bean id="chromeWebDriver" class="com.uv.driver.MyChromeWebDriver" scope="prototype">
        <property name="driverExecutorPath" value="${driver.chrome.executor.path}"/>
        <property name="headless" value="${driver.chrome.headless}"/>
        <property name="port" value="10080"/>
    </bean>

    <bean id="chromeRemoteWebDriver" class="com.uv.driver.MyChromeRemoteWebDriver" scope="prototype">
        <property name="driverExecutorPath" value="${driver.chrome.executor.path}"/>
        <property name="port" value="10080"/>
    </bean>

    <!-- 初步搜索筛选配置封装类-->
    <bean id="filter" class="com.uv.cbg.FilterBean" scope="prototype">
        <property name="level" value="${search.level.value}"/>
        <property name="schools" value="${search.school.values}"/>
        <property name="totalScore" value="${search.score.value.total_score}"/>
        <property name="personScore" value="${search.score.value.person_score}"/>
        <property name="showPublish" value="${search.showPublish}"/>
    </bean>
    <!-- 根据搜索筛选配置，初步查找游戏账号 -->
    <bean id="cbgFinderByWeb" class="com.uv.cbg.finder.CbgFinderByWeb" scope="prototype">
        <property name="myDriver" ref="chromeWebDriver"/>
        <property name="filterBean" ref="filter"/>
        <property name="cbgURL" value="${my.cbg.URL}"/>
    </bean>

    <!-- 只用于收集梦幻 大区 服务器信息的finder -->
    <bean id="areaServerFetchFinder" class="com.uv.cbg.finder.MyAreaServerFetcher" scope="prototype">
        <property name="myDriver" ref="chromeWebDriver"/>
        <property name="filterBean" ref="filter"/>
        <property name="cbgURL" value="${my.cbg.URL}"/>
        <property name="areaStartIdx" value="0"/>
        <property name="serverStartIdx" value="1"/>
    </bean>


    <!-- 初步找到帐号后根据此类的性价比配置，做过性价比过滤-->
    <bean id="costPerformanceFilter" class="com.uv.cbg.CostPerformanceFilter" init-method="setCP">
        <property name="totalCP" value="${cost_performance.total_score}"/>
        <property name="personCP" value="${cost_performance.person_score}"/>
    </bean>

    <bean id="dingNotify" class="com.uv.notify.DingNotify"/>

    <!-- 初步查找，性价比过滤，通知等所有功能的串联执行容器-->
    <bean id="cbgFinderContainer" class="com.uv.cbg.CbgFinderContainer">
        <property name="serverNames" value="${search.serverNames}"/>
        <property name="costFilter" ref="costPerformanceFilter"/>
        <property name="notify" ref="dingNotify"/>
        <property name="threadCount" value="${thread.count}"/>
        <property name="finderBeanName" value="cbgFinderByWeb"/>
    </bean>


</beans>